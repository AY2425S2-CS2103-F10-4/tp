@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

package "Parser Classes" as ParserClasses {
Class AddressBookParser
Class SortCommandParser
}

Class "<<interface>>\nLogic" as Logic
Class LogicManager
Class "{abstract}\nCommand" as Command
Class XYZCommand
Class SortCommand
Class CommandResult
Class TuitionTimeUtil <<utility>>
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -right-> "1" AddressBookParser : uses
AddressBookParser --> SortCommandParser : parses
SortCommandParser ..> SortCommand : <<create>>

XYZCommand -up-|> Command
SortCommand -up-|> Command

LogicManager .left.> Command : <<call>>

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model

SortCommand --> TuitionTimeUtil : uses

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : <<create>>

note right of XYZCommand
XYZCommand = AddCommand,\nFindCommand, DeleteCommand, etc
end note
@enduml
